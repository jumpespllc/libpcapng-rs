
/* automatically generated by rust-bindgen 0.60.1 */

/// Binding for respective libpcapng const
pub const PCAPNG_PEN: u32 = 31337;
/// Binding for respective libpcapng const
pub const PCAPNG_VERSION_MAJOR: u32 = 1;
/// Binding for respective libpcapng const
pub const PCAPNG_VERSION_MINOR: u32 = 0;
/// Binding for respective libpcapng const
pub const PCAPNG_BYTE_ORDER_MAGIC: u32 = 439041101;
/// Binding for respective libpcapng const
pub const PCAPNG_INTERFACE_DESCRIPTION_BLOCK: u32 = 1;
/// Binding for respective libpcapng const
pub const PCAPNG_PACKET_BLOCK: u32 = 2;
/// Binding for respective libpcapng const
pub const PCAPNG_SIMPLE_PACKET_BLOCK: u32 = 3;
/// Binding for respective libpcapng const
pub const PCAPNG_NAME_RESOLUTION_BLOCK: u32 = 4;
/// Binding for respective libpcapng const
pub const PCAPNG_INTERFACE_STATISTICS_BLOCK: u32 = 5;
/// Binding for respective libpcapng const
pub const PCAPNG_ENHANCED_PACKET_BLOCK: u32 = 6;
/// Binding for respective libpcapng const
pub const PCAPNG_IRIG_TIMESTAMP_BLOCK: u32 = 7;
/// Binding for respective libpcapng const
pub const PCAPNG_ARINC_429_AFDX_ENCAP_BLOCK: u32 = 8;
/// Binding for respective libpcapng const
pub const PCAPNG_SYSTEMD_JOURNAL_EXPORT_BLOCK: u32 = 9;
/// Binding for respective libpcapng const
pub const PCAPNG_DECRYPTION_SECRETS_BLOCK: u32 = 10;
/// Binding for respective libpcapng const
pub const PCAPNG_HONE_PROJECT_MACHINE_INFO_BLOCK: u32 = 257;
/// Binding for respective libpcapng const
pub const PCAPNG_HONE_PROJECT_CONNECTION_EVENT_BLOCK: u32 = 258;
/// Binding for respective libpcapng const
pub const PCAPNG_SYSDIG_MACHINE_INFO_BLOCK: u32 = 513;
/// Binding for respective libpcapng const
pub const PCAPNG_SYSDIG_PROCESS_INFO_V1_BLOCK: u32 = 514;
/// Binding for respective libpcapng const
pub const PCAPNG_SYSDIG_FD_LIST_BLOCK: u32 = 515;
/// Binding for respective libpcapng const
pub const PCAPNG_SYSDIG_EVENT_BLOCK: u32 = 516;
/// Binding for respective libpcapng const
pub const PCAPNG_SYSDIG_INTERFACE_LIST_BLOCK: u32 = 517;
/// Binding for respective libpcapng const
pub const PCAPNG_SYSDIG_USER_LIST_BLOCK: u32 = 518;
/// Binding for respective libpcapng const
pub const PCAPNG_SYSDIG_PROCESS_INFO_V2_BLOCK: u32 = 519;
/// Binding for respective libpcapng const
pub const PCAPNG_SYSDIG_EVENT_WITH_FLAGS_BLOCK: u32 = 520;
/// Binding for respective libpcapng const
pub const PCAPNG_SYSDIG_PROCESS_INFO_V3_BLOCK: u32 = 521;
/// Binding for respective libpcapng const
pub const PCAPNG_SYSDIG_PROCESS_INFO_V4_BLOCK: u32 = 528;
/// Binding for respective libpcapng const
pub const PCAPNG_SYSDIG_PROCESS_INFO_V5_BLOCK: u32 = 529;
/// Binding for respective libpcapng const
pub const PCAPNG_SYSDIG_PROCESS_INFO_V6_BLOCK: u32 = 530;
/// Binding for respective libpcapng const
pub const PCAPNG_SYSDIG_PROCESS_INFO_V7_BLOCK: u32 = 531;
/// Binding for respective libpcapng const
pub const PCAPNG_CUSTOM_DATA_BLOCK: u32 = 2989;
/// Binding for respective libpcapng const
pub const PCAPNG_CUSTOM_DATA_BLOCK_NOCOPY: u32 = 1073744813;
/// Binding for respective libpcapng const
pub const PCAPNG_SECTION_HEADER_BLOCK: u32 = 168627466;
/// Binding for respective libpcapng const
pub const PCAPNG_TLS_KEY_LOG: u32 = 1414288203;
/// Binding for respective libpcapng const
pub const PCAPNG_WIREGUARD_KEY_LOG: u32 = 1464290124;
/// Binding for respective libpcapng const
pub const PCAPNG_ZIGBEE_NWK_KEY: u32 = 1515083595;
/// Binding for respective libpcapng const
pub const PCAPNG_ZIGBEE_APS_KEY: u32 = 1514229843;
/// Binding for respective libpcapng const
pub const PCAPNG_BLOCK_TYPE_AND_SIZE_LENGTH: u32 = 8;


/// Binding for respective libpcapng type
pub type size_t = libc::size_t;
/// Binding for respective libpcapng type
pub type __uint16_t = ::std::os::raw::c_ushort;
/// Binding for respective libpcapng type
pub type __uint32_t = ::std::os::raw::c_uint;
/// Binding for respective libpcapng type
pub type __uint64_t = ::std::os::raw::c_ulong;
/// Binding for respective libpcapng type
pub type __off_t = ::std::os::raw::c_long;
/// Binding for respective libpcapng type
pub type __off64_t = ::std::os::raw::c_long;
/// Binding for respective libpcapng type
pub type FILE = libc::FILE;

/// Binding for respective libpcapng struct
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_marker {
    /// Binding for respective libpcapng struct field
    _unused: [u8; 0],
}

/// Binding for respective libpcapng struct
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_codecvt {
    /// Binding for respective libpcapng struct field
    _unused: [u8; 0],
}

/// Binding for respective libpcapng struct
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_wide_data {
    /// Binding for respective libpcapng struct field
    _unused: [u8; 0],
}

/// Binding for respective libpcapng type
pub type _IO_lock_t = ::std::os::raw::c_void;

/// Binding for respective libpcapng struct
#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct _pcapng_custom_data_block_light_t {
    /// Binding for respective libpcapng struct field
    pub pen: u32,
}

/// Binding for respective libpcapng type
pub type pcapng_custom_data_block_light_t = _pcapng_custom_data_block_light_t;

/// Binding for respective libpcapng struct
#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct _pcapng_section_header_block_light_t {
    /// Binding for respective libpcapng struct field
    pub magic: u32,
    /// Binding for respective libpcapng struct field
    pub major_version: u16,
    /// Binding for respective libpcapng struct field
    pub minor_version: u16,
    /// Binding for respective libpcapng struct field
    pub section_length: u64,
}

/// Binding for respective libpcapng type
pub type pcapng_section_header_block_light_t = _pcapng_section_header_block_light_t;

/// Binding for respective libpcapng struct
#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct _pcapng_interface_description_block_light_t {
    /// Binding for respective libpcapng struct field
    pub linktype: u16,
    /// Binding for respective libpcapng struct field
    pub reserved: u16,
    /// Binding for respective libpcapng struct field
    pub snaplen: u32,
}

/// Binding for respective libpcapng type
pub type pcapng_interface_description_block_light_t = _pcapng_interface_description_block_light_t;

/// Binding for respective libpcapng struct
#[repr(C, packed)]
#[derive(Debug, Copy, Clone)]
pub struct _pcapng_enhanced_packet_block_light_t {
    /// Binding for respective libpcapng struct field
    pub interface_id: u32,
    /// Binding for respective libpcapng struct field
    pub timestamp_high: u32,
    /// Binding for respective libpcapng struct field
    pub timestamp_low: u32,
    /// Binding for respective libpcapng struct field
    pub captured_packet_length: u32,
    /// Binding for respective libpcapng struct field
    pub original_packet_length: u32,
}

/// Binding for respective libpcapng type
pub type pcapng_enhanced_packet_block_light_t = _pcapng_enhanced_packet_block_light_t;

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_section_header_block_write(outbuf: *mut ::std::os::raw::c_uchar) -> size_t;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_section_header_block_size() -> size_t;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_section_header_block_read(
        inbuf: *mut ::std::os::raw::c_uchar,
        inbuf_len: size_t,
    ) -> *mut pcapng_section_header_block_light_t;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_interface_description_block_write(
        snaplen: u32,
        outbuf: *mut ::std::os::raw::c_uchar,
    ) -> size_t;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_interface_description_block_size() -> size_t;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_interface_description_block_read(
        inbuf: *mut ::std::os::raw::c_uchar,
        inbuf_len: size_t,
    ) -> *mut pcapng_interface_description_block_light_t;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_enhanced_packet_block_write_time(
        packet: *const ::std::os::raw::c_uchar,
        packet_len: size_t,
        timestamp_high: u32,
        timestamp_low: u32,
        outbuf: *mut ::std::os::raw::c_uchar,
    ) -> size_t;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_enhanced_packet_block_write(
        packet: *const ::std::os::raw::c_uchar,
        packet_len: size_t,
        outbuf: *mut ::std::os::raw::c_uchar,
    ) -> size_t;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_enhanced_packet_block_size(packet_len: size_t) -> size_t;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_enhanced_packet_block_read(
        inbuf: *mut ::std::os::raw::c_uchar,
        inbuf_len: size_t,
    ) -> *mut pcapng_enhanced_packet_block_light_t;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_custom_data_block_write(
        pen: u32,
        data: *const ::std::os::raw::c_uchar,
        data_len: size_t,
        outbuf: *mut ::std::os::raw::c_uchar,
    ) -> size_t;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_custom_data_block_size(data_len: size_t) -> size_t;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_custom_data_block_read(
        inbuf: *mut ::std::os::raw::c_uchar,
        inbuf_len: size_t,
    ) -> *mut pcapng_custom_data_block_light_t;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_custom_data_block_start_offset() -> u32;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_custom_data_block_data_length(block_total_length: u32) -> u32;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_write_header_to_file(outfile: *mut FILE) -> ::std::os::raw::c_int;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_write_enhanced_packet_to_file(
        outfile: *mut FILE,
        packet: *mut ::std::os::raw::c_uchar,
        packet_size: size_t,
    ) -> ::std::os::raw::c_int;
}

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_write_enhanced_packet_with_time_to_file(
        outfile: *mut FILE,
        packet: *mut ::std::os::raw::c_uchar,
        packet_size: size_t,
        timestamp: u32,
    ) -> ::std::os::raw::c_int;
}

/// Binding for respective libpcapng type
pub type foreach_pcapng_block_cb = Option<
    unsafe extern "C" fn(
        block_counter: u32,
        block_type: u32,
        block_total_length: u32,
        data: *mut ::std::os::raw::c_uchar,
        userdata: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int,
>;

extern "C" {
    /// Binding for respective libpcapng function
    pub fn libpcapng_fp_read(
        fp: *mut FILE,
        pcapng_block_cb: foreach_pcapng_block_cb,
        userdata: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
